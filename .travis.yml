language: node_js
node_js:
- lts/*
- node
services:
- docker
after_success:
- export DOCKER_REPO="imqueuesandbox/time-table"
- export VERSION_REGEX="^v([0-9]+)\.([0-9]+)\.([0-9]+)$"
- export DEV_VERSION_REGEX="^v([0-9]+)\.([0-9]+)\.([0-9]+)-([0-9A-Za-z]+)$"
- export DOCKER_TAGS=()
- export DATE_STR=`date +"%Y-%m-%d-%H-%M-%S"`
- docker build -f Dockerfile -t $DOCKER_REPO:$TRAVIS_COMMIT . || travis_terminate 1
- if [[ $TRAVIS_TAG =~ $DEV_VERSION_REGEX ]]; then
    DOCKER_TAGS+=( "dev" ) && DOCKER_TAGS+=( $TRAVIS_TAG );
  fi
- if [[ $TRAVIS_TAG =~ $VERSION_REGEX ]]; then
    DOCKER_TAGS+=( "latest" ) && DOCKER_TAGS+=( $TRAVIS_TAG );
  fi
- if [[ $TRAVIS_BRANCH == "release" ]]; then
    DOCKER_TAGS+=( "release" ) && DOCKER_TAGS+=( "release-${DATE_STR}");
  fi
- if [ ${#DOCKER_TAGS[@]} -gt 0 ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
    for tag in "${DOCKER_TAGS[@]}"; do
      docker tag $DOCKER_REPO:$TRAVIS_COMMIT $DOCKER_REPO:$tag;
    done;
    docker login -u $DOCKER_USER -p $DOCKER_PASS || travis_terminate 1;
    docker push $DOCKER_REPO || travis_terminate 1;
  fi
env:
  global:
  - secure: eiKSmxoGoBr6bjekv/3s1PlJbLIZ/x/0kw/n6Eo8WnoFtPHspuUFbpL4bPHce0NwDr0fOd78ZgVIuT8YvyIIuFiFYkT3Z5Mxo6dQ/4e9wBHuUd+rHyRax2oOsMcLqBs5w/5okfDJmnJT1tshryeM4PMSXUGFnFaenm9I9ogQCjfk5O/frA+zm4LWAmg3x3hjB0gSahKm60YD2EnUAoN33+JEpZKZAhdauySjuE9C3mImIptWea8ueINFqzb+h7IZ/tWl8mEWYcnntlWWPX3AhkVHJjQxBXxo6HNOb8cSbiQ0OvuB8J8d9lrz2+KcrAnJaK2+SrKWgJtfZ5nH5mSs/Wy8hI4I3FUMLKm1uT3bELGI+KvOmHj1230RlGydk+ILV6Myk96LXpLNB/JuUqBRqZZLllJUYUyy5f33LrUSAGQ6SUmHewWWFnOByyAMIRBMuy51OE/yrTeoeY5IbEcx8PcwXivtMEa2QgBqjbEli5TgWnYe5HKYmAFejGTMQH+SIJQACKgXvU4/Z6LzGDqcavLgzW8zUBCukPQmFQzc3D9GQrujrrU1tdclnCtZ1UEV6Zcp5dxoC/XfjzZIINgo07MAY82c8HK7yybd93gFtXn7CpmXpHIX62tgBb1JhvVzDKqhV0NhFkn94pKI5UK2TXMMkoQUrMLeG8qDuQjLDwo=
  - secure: W0mTl5z7YIBvlOzH0kHiMsUCnNtrks2XuAH/xlLcRiCP2RPqY7GxRP/sHwaya9DN4+ixcXXbO+rUCmuYjjTv/XbcHw4zLGIbOT8Jo7pLyvahjg5lSQKgNigRyrXcjkciXan4u2UfwBTqv7UDEsy4feGuBxfwZB+BCALP6gQHSbl2hnlmRoy9UNgKCWt/IUwqAAQ5QbCs/+1yIJotoqCpLK46Yj204Gy2JMbwzuyyEhudBRuX8zr93Jf7ZnA9x4wWGNOOWB0s2pWlNEPwxyCu6BYL07vKuyoNlFHPXyVvXUe37ThW7DIQAjrCxN4AypVhGdOlqwEEsEWaaBCYurTWx9fQkrHkU0IYQp4w37YQ+MKEhmWOgNxBXmleqQ7k0dp9FYLwDj99fLzTAH9+z/H9nYJCKLzyMu7HUoACUTl5Eo3uZR5lQbBOnxT3qOa8h+Ih6eU/R9vCRbf9gg7Vl+MwMNOn9vxYCM1kqstl1LabT2kBCmajpYh6NZK4QifFY9zo0mBilwrIjaHnQtY/IF6F2m0FQYjMSX9Hda2B5xvUYKfDzjXbgJFdX+FR262XMVzA7iGHjZAHhcnRRb/guxO/T/CHv8oU3tzV95ScOGgvBNTMFRDG38wZJgCQa+oUnP6F5JRYLRggdVtPX5gBxN6EvOJ1T1ySHR6T2n68V7zKJf0=
